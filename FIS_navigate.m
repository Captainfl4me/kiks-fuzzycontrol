% -------------------------------------------------
%  (c) 2000-2004 Theodor Storm <theodor@tstorm.se>
%  http://www.tstorm.se
%  Modified by Lily Meng 16th September 2009
% -------------------------------------------------
function FIS_navigate(port,baud,time)
    % FIS_navigate(port,baud,time)
    % port = serial port to communicate with (port<0 ==> simulated robot, port>=0 ==> real robot
    % baud = baud rate
    % time = time to run behaviour
    
    %% -- DO NOT MAKE ANY CHANGES TO THIS FUNCTION !!!!!!!!!!!!!!!!!!
    if nargin<3 time=60; end
    if nargin<2 baud=9600; end
    if nargin<1 port=-1; end

    kiks_kclose([])
    ref=kiks_kopen([port,baud,1]);
    kSetEncoders(ref,0,0);
    reflex = 0;
    t0=clock;
    loops=0;
    
    %%
    % Read the FIS from disk
    % (don't forget to save your FIS after you make changes to it.)
    % You need to replace the question marks with the name of your FIS.
    fis = readfis('navigate');
    
    while (kiks_ktime(port)<time)
       loops=loops+1;
       
       % Read the Khepara's range sensors and group them.
       % Change these if you want to group the sensors differently.
       reflex = kProximity(ref);
       left = sum(reflex(1:2))/2;
       front = sum(reflex(3:4))/2;
       right = sum(reflex(5:6))/2;
       
      
       % Use the FIS to compute the speed and trun rate
       FIS_outputs = evalfis(fis, [front, left, right]);
    
       % Assign the speed and trun rate to outputs generated by the FIS
       turn = FIS_outputs(2);
       speed = FIS_outputs(1);
       
       % use the function to calculate the wheel speeds
       setWheelSpeeds(ref,speed,turn);  
    end
    
    
    %kGetEncoders(ref)
    t=etime(clock,t0);
    disp(sprintf('%.1f loops in %.1f seconds = %.1f loops/second (%.0f%%)\n',loops,t,loops/t,(time/t)*100));
    
    kSetSpeed(ref,0,0);
    kiks_kclose(ref);
end


% *************************************************************
% The following function implements the kinemtatics of the
% robot, converting turn speed and forward speed into speeds
% for the left and right wheels.

%% -- DO NOT MAKE ANY CHANGES TO THIS FUNCTION !!!!!!!!!!!!!!!!!!
function setWheelSpeeds(ref,velocity,rotation) 
   wheelRadius = 6; % mm
   turnRadius  = 24; % mm

   % Prevent the robot "drifiting to the left"
   % Seems to be a bug in KiKs?
   if abs(rotation)<0.01
       rotation = 0;
   end
   
   wl = (1/wheelRadius)*(velocity - turnRadius*rotation);
   wr = (1/wheelRadius)*(velocity + turnRadius*rotation);
   
   unitsPerRadPerSec = 0.75;
   kSetSpeed(ref,wl*unitsPerRadPerSec,wr*unitsPerRadPerSec);
end
